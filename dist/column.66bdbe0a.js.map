{"version":3,"sources":["js/column.js"],"names":["Column","id","name","self","event","target","classList","contains","data","FormData","append","cardName","fetch","baseUrl","method","headers","myHeaders","body","then","resp","json","card","Card","addCard","prototype","element","querySelector","appendChild","removeColumn","haaders","parentNode","removeChild"],"mappings":"AAAA,SAASA,MAAT,CAAgBC,EAAhB,EAAoBC,IAApB,EAA0B;AACtB,MAAIC,IAAI,GAAG,IAAX;AAEA,OAAKF,EAAL,GAAUA,EAAV;AACA,OAAKC,IAAL,GAAYA,IAAI,IAAI,eAApB;;AAEA,MAAIE,KAAK,CAACC,MAAN,CAAaC,SAAb,CAAuBC,QAAvB,CAAgC,UAAhC,CAAJ,EAAiD;AAC7C;AACA,QAAIC,IAAI,GAAE,IAAIC,QAAJ,EAAV;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBC,QAApB;AACAH,IAAAA,IAAI,CAACE,MAAL,CAAY,2BAAZ,EAAwCP,IAAI,CAACF,EAA7C,EAJ6C,CAK7C;;AACAW,IAAAA,KAAK,CAACC,OAAO,GAAG,OAAX,EAAoB;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAEC,SAFY;AAGrBC,MAAAA,IAAI,EAAET;AAHe,KAApB,CAAL,CAKKU,IALL,CAKU,UAAUC,IAAV,EAAgB;AAClB,aAAOA,IAAI,CAACC,IAAL,EAAP;AAEH,KARL,EASKF,IATL,CASU,UAASC,IAAT,EAAc;AAChB,UAAIE,IAAI,GAAE,IAAIC,IAAJ,CAASH,IAAI,CAAClB,EAAd,EAAiBU,QAAjB,CAAV;AACAR,MAAAA,IAAI,CAACoB,OAAL,CAAaF,IAAb;AACH,KAZL;AAaH;AAEJ;;AAEDrB,MAAM,CAACwB,SAAP,GAAmB;AACfD,EAAAA,OAAO,EAAE,iBAAUF,IAAV,EAAgB;AACrB,SAAKI,OAAL,CAAaC,aAAb,CAA2B,IAA3B,EAAiCC,WAAjC,CAA6CN,IAAI,CAACI,OAAlD;AACH,GAHc;AAIfG,EAAAA,YAAY,EAAE,wBAAY;AACtB,QAAIzB,IAAI,GAAG,IAAX;AACAS,IAAAA,KAAK,CAACC,OAAO,GAAG,UAAV,GAAuBV,IAAI,CAACF,EAA7B,EAAiC;AAAEa,MAAAA,MAAM,EAAE,QAAV;AAAoBe,MAAAA,OAAO,EAAEb;AAA7B,KAAjC,CAAL,CACKE,IADL,CACU,UAAUC,IAAV,EAAgB;AAClB,aAAOA,IAAI,CAACC,IAAL,EAAP;AACH,KAHL,EAII;AAJJ,KAKKF,IALL,CAKU,UAAUC,IAAV,EAAgB;AAClBhB,MAAAA,IAAI,CAACsB,OAAL,CAAaK,UAAb,CAAwBC,WAAxB,CAAoC5B,IAAI,CAACsB,OAAzC;AACH,KAPL;AAQH;AAdc,CAAnB","file":"column.66bdbe0a.js","sourceRoot":"..","sourcesContent":["function Column(id, name) {\r\n    var self = this;\r\n\r\n    this.id = id;\r\n    this.name = name || 'No name given';\r\n\r\n    if (event.target.classList.contains('add-card')) {\r\n        //interfejs do tworzenia par klucz-wartość\r\n        var data =new FormData();\r\n        data.append('name', cardName);\r\n        data.append('bootcamp_kanban_column_id',self.id);\r\n        //post endpoint /CARD\r\n        fetch(baseUrl + '/card', {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: data,\r\n        })\r\n            .then(function (resp) {\r\n                return resp.json();\r\n\r\n            })\r\n            .then(function(resp){\r\n                var card= new Card(resp.id,cardName);\r\n                self.addCard(card);\r\n            });\r\n    }\r\n\r\n}\r\n\r\nColumn.prototype = {\r\n    addCard: function (card) {\r\n        this.element.querySelector('ul').appendChild(card.element);\r\n    },\r\n    removeColumn: function () {\r\n        var self = this;\r\n        fetch(baseUrl + '/column/' + self.id, { method: 'DELETE', haaders: myHeaders })\r\n            .then(function (resp) {\r\n                return resp.json();\r\n            })\r\n            // usunięcie kolumny dopiero po uzyskaniu odpowiedzi z serwera. \r\n            .then(function (resp) {\r\n                self.element.parentNode.removeChild(self.element);\r\n            });\r\n    }\r\n};\r\n"]}